@model IEnumerable<Application.Models.Consumer>
@inject Application.Services.Interfaces.IHouseService HouseService

@{
    ViewData["Title"] = "Index";
}

@Html.Partial("_TableNavigation")

<h1>Index</h1>

<p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Create new
    </button>
</p>

<form asp-action="Create" method="post">
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create New Consumer</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.Partial("_CreateConsumerForm", await HouseService.GetList())
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PersonalAccount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConsumerOwner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HeatingArea)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfPersons)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConsumerEmail)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null & Model.Any())
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonalAccount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Flat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConsumerOwner)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HeatingArea)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfPersons)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConsumerEmail)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.PersonalAccount">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.PersonalAccount">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.PersonalAccount">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <p>No consumers found.</p>
        }
    </tbody>
</table>
